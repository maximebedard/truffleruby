fails:Module#refine doesn't apply refinements outside the refine block
fails:Module#refine does not apply refinements to external scopes not using the module
fails:Module#refine does not make available methods from another refinement module
fails:Module#refine method lookup looks in prepended modules from the refinement first
fails:Module#refine method lookup looks in included modules from the refinement then
fails:Module#refine method lookup looks in the class then
fails:Module#refine for methods accesses indirectly is not honored by Kernel#method
fails:Module#refine for methods accesses indirectly is not honored by Kernel#respond_to?
fails:Module#refine when super is called in a refinement looks in the included to refinery module
fails:Module#refine when super is called in a refinement looks in the refined class
fails:Module#refine when super is called in a refinement looks in the refined class even if there is another active refinement
fails:Module#refine module inclusion overrides methods of ancestors by methods in descendants
fails:Module#refine for methods accessed indirectly is not honored by Kernel#send
fails:Module#refine for methods accessed indirectly is not honored by BasicObject#__send__
fails:Module#refine for methods accessed indirectly is not honored by Symbol#to_proc
fails:Module#refine for methods accessed indirectly is not honored by string interpolation
fails:Module#refine for methods accessed indirectly is honored by Kernel#binding
fails:Module#refine for methods accessed indirectly is not honored by Kernel#method
fails:Module#refine for methods accessed indirectly is not honored by Kernel#respond_to?
